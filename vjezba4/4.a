CT_CR		EQU	0FFFF0000
CT_LR		EQU	0FFFF0004
CT_ACK		EQU	0FFFF0008
CT_END		EQU	0FFFF000C

DMA_SRC 	EQU	0FFFF1000
DMA_DEST	EQU	0FFFF1004
DMA_SIZE	EQU	0FFFF1008
DMA_CTRL	EQU	0FFFF100C
DMA_START	EQU	0FFFF1010
DMA_BS		EQU	0FFFF1014

BVJ		EQU	0FFFFFFFC




	ORG	0
	
	MOVE	10000, SP
	JP	GLAVNI




; Potprogram DMA NMI

	ORG	0C

	PUSH	R0
	MOVE	SR, R0 
	PUSH	R0
	PUSH	R1

	STORE	R0, (DMA_BS)			; Dojava o prihvatu 
	
	LOAD	R0, (BLOKOVI) 			; Count blokova ++ (na 5 prekida)
	ADD	R0, 1, R0
	STORE	R0, (BLOKOVI)

	LOAD	R0, (BLOKPRVI) 			; Dodati -1 na kraj bloka
	MOVE	%D -1, R1
	STORE	R1, (R0)
	ADD	R0, 4, R0
	STORE	R0, (BLOKPRVI)

	POP	R1
	POP	R0
	MOVE	R0, SR
	POP	R0

	RETN





GLAVNI	LOAD	R0, (BLOKOVI)			; nakon 5 uduni
	CMP	R0, 5
	JR_EQ	KRAJ


						; CT brojac
SET_CT	MOVE	%D 1000, R0 			; 1 ms = 10 000 (10^-3 s) 
	STORE	R0, (CT_LR)
						; CT kontroler
	MOVE	%D 01, R0			; Vrsta INT   INT da/ne    broji da/ne
	STORE	R0, (CT_CR)			



CHK_CT	LOAD	R0, (CT_ACK)			; Provjera spremnosti CT-a
	CMP	R0, 1
	JR_NE	CHK_CT


CHK_DMA	LOAD	R0, (DMA_SIZE)			; Provjera je li broj podataka na DMA dosao do kraja (do nule)
	CMP	R0, 0
	JR_NE	CHK_DMA


	MOVE	0, R0				; Sve je spremno, ugasi sad CT
	STORE 	R0, (CT_END)



SET_DMA	LOAD	R0, (BVJ) 			; source
	STORE	R0, (DMA_SRC)

	LOAD	R0, (BLOKPRVI) 			; destination (treba pomicati)
	STORE	R0, (DMA_DEST)
	ADD	R0, %D 36, R0
	STORE	R0, (BLOKPRVI)

	MOVE	%D 9, R0 			; velicina (blok je 9)
	STORE	R0, (DMA_SIZE)

	MOVE	%B 0111, R0			; DEST (0 mem) SRC (1 vj) MOD (1 kraca cik) INT (1 prekid) 
	STORE	R0, (DMA_CTRL)

	MOVE	%B 10000, SR			; Omoguci prekide
	STORE	R0, (DMA_START)


	JP	GLAVNI





KRAJ	MOVE	0, R0				; 0 na CTRL od DMA i CT
	STORE	R0, (CT_CR)
	STORE	R0, (DMA_CTRL)
	HALT





BLOKOVI		DW	0				
BLOKPRVI	DW	1000

